## Changelog

- **0.2**:
    - TestFligt Release.
    - Bundled sample firmwares for Light Server and Light client to ease the testing process
    - Minor fixes for copy in the model configuration view, Detail labels where left blank, now they show more information on what happens on selection.
    - Added empty scanner view (Not yet implemented in UI).
    - Added mesh save when mesh state is reset to fix the crash caused by mesh state not being present on main network view.
    - Reset network text will now be red to alert the user of destructive action
    - Settings view copy improvemetns: capitalization fixes and better naming of rows
    - CBUUID log in the provisioner will now show the hex value instead of data size
    - Title on provisioner will use the friendly name instead of BLE name
    - Display node name and unicast in the node's cell title label
    - Fixed bug causing node friendly name to be forced into a hex value
    - Fixed a bug causing node friendly name not to be stored and used
    - Minor tweak to the node cell UI
    - Shortened company name/company id label text
    - removed 0x from placeholder input to avoid confusion
    - Fixed Bug causing key binding, pub/sub addresses to overlap on models with same identifier
    - Minor refactor to the compositionelement model to allow storing model related data within the element instead of the root object
    - Added activity indicator in the provisioning view to emphasise the progress, it stops at completion or any failures
    - Minor cleanup in log messages during node identity verification, all lowercased
    - Used CBUUID as a node identifier to avoid duplication and to avoid the mistake of using advertisement data as it's not a node identifier
    - Minor log fixes to avoid double logging of disconnection, etc..
    - Disconnecting of current proxy when provisioning a new node, this is to avoid having multiple proxies connected simultaneously
    - Removed commented out code line
    - Node Identity validation
    - Added node identity advertisement parsing when reconnecting to a node to configure after provisioning
    - Added ability to overwrite the unicast address in case the user doesn't want to use the automatically incremented space
    - Added automatic unicast address incrementing in mesh state struct
    - unicast will automatically increment according to number of elements coming from the composition data of a provisioned node
    - This allows simply tapping provision button instead of having to type in the address manually
    - Minor tweak to tint settings
    - Color improvements on Node cells
    - Renamed Display name to nRF Mesh
    - Updated LaunchScreen Storyboard
    - Added missing image assets
    - Added 1 second delay after provisioning succeeds to allow the user to see the message
    - Provisioning view will set the main tab to the network view instead of the scanner view before popping to root view, to give a better context
    - Renamed Product Vendor Identifier to Product Version as it was incorrect
    - Updated Composition status struct and NodeEntry struct to reflect the VenrodId->ProductVersion change
    - Added an improved settings icon
    - Fixed borken icon in node conviguration view
    - Added Settings icon to settings tab bar item instead of the list icon
    - Added an improved icon to the add tabbar
    - Added option to reset the mesh database, this is a destructive/non reversible action and regenerate new NetKey and mesh state
    - Added Mesh rejoin functionality to connect to a proxy node
    - Reconnection to Proxy node functional, also displaying advertisement data on the scanner view with RSSI
    - Enabled Mesh disconnection form the main view
    - WIP: Added proxy scanning mode
    - Added Reconnect button on the main network view when there's a configured network, but no connected proxy node
    - Display SIG model identifiers as subtitle even if they're parsed into a human readable string
    - Created an improved scanner node item cell
    - Created an improved scanner node item cell
    - Display RSSI values (Will grey out when RSSI is not available, displaying the last known RSSI
    - Display Provisioning advertisement data when present
    - Added a network icon to cells
    - Extracted status code alerts to clean up code duplication
    - Added hex parsign validation to address value inputs
    - Fixed Default TTL Configuration message implementation
    - Default TTL status message is now implemented and callbacks are forwarded to it's designated delegate
    - Added subscription lists support for the Example application's UI
    - Added Subscription Add message operation, Subscription status operation and dependencies
    - iOS10 data compatibility and Segmentation / Acknowledgement messages bugs resolved.
    - Fixes related to segmentation and reassembly, This fixes the acknowlegement messages failing when they're longer than MTU size and are not segmented
    - This also adds Default TTL Get message support (Not accessible currently, but functional)
    - Fixes a bug that caused an invalid state when a segmented message arrives over only one segment I.E: SegN=0x00 and SegO=0x00 causing the ack timer to have an unknown state
    - Re-enabled app key state switch after composition data is received
    - Copy Data objects to preserve 0 indices on iOS versions <= 10
    - Added GATT Bearer SAR checks to assure that segments that are out of order are dropped
    - Added segment caching to assure that incomind lower transport segments are not appended to the the current segment being Reassembled upon retransmission

- **0.1**:
	- Initial release
